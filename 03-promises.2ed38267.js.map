{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAChCC,EAAe,EAuCnB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAuCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAErDA,E,IAXPN,EAAKe,iBAAiB,UAnCQ,SAAAC,GAC5BA,EAAMC,iBAEN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYd,EAAKY,EAALZ,MAAOe,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAEvBC,EAAcC,OAAOlB,EAAMmB,OAASD,OAAOH,EAAKI,OAEpD,IAAID,OAAuB,GAAhBF,EAAOG,OAAlB,CAIArB,EAAcD,EAAcG,EAAMmB,OAC/BC,MAAK,SAAAD,GACJE,EAAA7B,GAAS8B,OAAOC,QAAQJ,E,IAEzBK,OAAM,SAAAL,GACLE,EAAA7B,GAAS8B,OAAOG,QAAQN,E,IAG5B,IAAK,IAAIO,EAAI,EAAGA,EAAIV,EAAOG,MAAOO,IAEhC5B,EADAD,GAAgB,EACYoB,GACzBG,MAAK,SAAAD,GACJE,EAAA7B,GAAS8B,OAAOC,QAAQJ,E,IAEzBK,OAAM,SAAAL,GACLE,EAAA7B,GAAS8B,OAAOG,QAAQN,E,IAE5BF,GAAeC,OAAOH,EAAKI,OAG7BtB,EAAe,CAvBb,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nlet promisNumber = 1;\n\nconst onSubmitCreatePromise = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  let promisDelay = Number(delay.value) + Number(step.value);\n\n  if (Number(amount.value == 0)) {\n    return;\n  }\n\n  createPromise(promisNumber, delay.value)\n    .then(value => {\n      Notiflix.Notify.success(value);\n    })\n    .catch(value => {\n      Notiflix.Notify.failure(value);\n    });\n\n  for (let i = 1; i < amount.value; i++) {\n    promisNumber += 1;\n    createPromise(promisNumber, promisDelay)\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(value => {\n        Notiflix.Notify.failure(value);\n      });\n    promisDelay += Number(step.value);\n  }\n\n  promisNumber = 1;\n};\n\nform.addEventListener('submit', onSubmitCreatePromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\n// альтернативний варіант\n\n// timerId = setInterval(() => {\n//   promisNumber += 1;\n//   createPromise(promisNumber, promisDelay)\n//     .then(value => {\n//       Notiflix.Notify.success(value);\n//     })\n//     .catch(value => {\n//       Notiflix.Notify.failure(value);\n//     });\n\n//   promisDelay += Number(step.value);\n//   if (promisNumber === Number(amount.value)) {\n//     clearInterval(timerId);\n// promisDelay = 0;\n// promisNumber = 1;\n//   }\n// }, step.value);\n\n// const onSubmitCreatePromise = event => {\n//   event.preventDefault();\n\n// const {\n//   elements: { delay, step, amount },\n// } = event.currentTarget;\n\n//   let promisDelay = Number(delay.value) + Number(step.value);\n\n//   setTimeout(() => {\n// createPromise(promisNumber, delay.value)\n//   .then(value => {\n//     Notiflix.Notify.success(value);\n//   })\n//   .catch(value => {\n//     Notiflix.Notify.failure(value);\n//   })\n//   .finally(() => {\n//     return (promisNumber += 1);\n//   });\n\n// timerId = setInterval(() => {\n//   createPromise(promisNumber, promisDelay)\n//     .then(value => {\n//       Notiflix.Notify.success(value);\n//     })\n//     .catch(value => {\n//       Notiflix.Notify.failure(value);\n//     });\n//   promisNumber += 1;\n//   promisDelay += Number(step.value);\n//   if (promisNumber > Number(amount.value)) {\n//     clearInterval(timerId);\n//     promisDelay = 0;\n//     promisNumber = 1;\n//   }\n// }, step.value);\n//   }, delay.value);\n// };\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     } else {\n//       reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//     }\n//   });\n// }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$promisNumber","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","promisDelay","Number","value","then","$parcel$interopDefault","Notify","success","catch","failure","i"],"version":3,"file":"03-promises.2ed38267.js.map"}