{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QACpC,IAAIC,EAAU,KACVC,EAAe,EA0CnB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,G,CAK1DP,EAAKa,iBAAiB,UAnDQC,IAC5BA,EAAMC,iBAEN,MACEC,UAAUT,MAAEA,EAAKU,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,IAAIC,EAAcC,OAAOd,EAAMe,OAASD,OAAOJ,EAAKK,OAEpDC,YAAW,KACTlB,EAAcD,EAAcG,EAAMe,OAC/BE,MAAKF,IACJG,EAAA3B,GAAS4B,OAAOC,QAAQL,EAAM,IAE/BM,OAAMN,IACLG,EAAA3B,GAAS4B,OAAOG,QAAQP,EAAM,IAE/BQ,SAAQ,IACC1B,GAAgB,IAG5BD,EAAU4B,aAAY,KACpB1B,EAAcD,EAAcgB,GACzBI,MAAKF,IACJG,EAAA3B,GAAS4B,OAAOC,QAAQL,EAAM,IAE/BM,OAAMN,IACLG,EAAA3B,GAAS4B,OAAOG,QAAQP,EAAM,IAElClB,GAAgB,EAChBgB,GAAeC,OAAOJ,EAAKK,OACvBlB,EAAeiB,OAAOH,EAAOI,SAC/BU,cAAc7B,GACdiB,EAAc,EACdhB,EAAe,E,GAEhBa,EAAKK,MAAM,GACbf,EAAMe,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nlet timerId = null;\nlet promisNumber = 1;\n\nconst onSubmitCreatePromise = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let promisDelay = Number(delay.value) + Number(step.value);\n\n  setTimeout(() => {\n    createPromise(promisNumber, delay.value)\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(value => {\n        Notiflix.Notify.failure(value);\n      })\n      .finally(() => {\n        return (promisNumber += 1);\n      });\n\n    timerId = setInterval(() => {\n      createPromise(promisNumber, promisDelay)\n        .then(value => {\n          Notiflix.Notify.success(value);\n        })\n        .catch(value => {\n          Notiflix.Notify.failure(value);\n        });\n      promisNumber += 1;\n      promisDelay += Number(step.value);\n      if (promisNumber > Number(amount.value)) {\n        clearInterval(timerId);\n        promisDelay = 0;\n        promisNumber = 1;\n      }\n    }, step.value);\n  }, delay.value);\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n}\n\nform.addEventListener('submit', onSubmitCreatePromise);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$promisNumber","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","event","preventDefault","elements","step","amount","currentTarget","promisDelay","Number","value","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure","finally","setInterval","clearInterval"],"version":3,"file":"03-promises.a2212442.js.map"}