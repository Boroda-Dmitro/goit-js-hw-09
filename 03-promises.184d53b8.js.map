{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QACpC,IAAIC,EAAU,KACVC,EAAe,EAuCnB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAiBC,MAAU,GAEvDA,EAAM,G,CAXbP,EAAKe,iBAAiB,UAnCQC,IAC5BA,EAAMC,iBAEN,MACEC,UAAUX,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cACV,IAAIC,EAAcC,OAAOhB,EAAMiB,OAASD,OAAOJ,EAAKK,OAEpDnB,EAAcD,EAAcG,EAAMiB,OAC/BC,MAAKD,IACJE,EAAA5B,GAAS6B,OAAOC,QAAQJ,EAAM,IAE/BK,OAAML,IACLE,EAAA5B,GAAS6B,OAAOG,QAAQN,EAAM,IAGlCrB,EAAU4B,aAAY,KACpB3B,GAAgB,EAChBC,EAAcD,EAAckB,GACzBG,MAAKD,IACJE,EAAA5B,GAAS6B,OAAOC,QAAQJ,EAAM,IAE/BK,OAAML,IACLE,EAAA5B,GAAS6B,OAAOG,QAAQN,EAAM,IAGlCF,GAAeC,OAAOJ,EAAKK,OACvBpB,IAAiBmB,OAAOH,EAAOI,SACjCQ,cAAc7B,GACdmB,EAAc,EACdlB,EAAe,E,GAEhBe,EAAKK,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nlet timerId = null;\nlet promisNumber = 1;\n\nconst onSubmitCreatePromise = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  let promisDelay = Number(delay.value) + Number(step.value);\n\n  createPromise(promisNumber, delay.value)\n    .then(value => {\n      Notiflix.Notify.success(value);\n    })\n    .catch(value => {\n      Notiflix.Notify.failure(value);\n    });\n\n  timerId = setInterval(() => {\n    promisNumber += 1;\n    createPromise(promisNumber, promisDelay)\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(value => {\n        Notiflix.Notify.failure(value);\n      });\n  \n    promisDelay += Number(step.value);\n    if (promisNumber === Number(amount.value)) {\n      clearInterval(timerId);\n      promisDelay = 0;\n      promisNumber = 1;\n    }\n  }, step.value);\n};\n\nform.addEventListener('submit', onSubmitCreatePromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\n\n// альтернативний варіант\n// const onSubmitCreatePromise = event => {\n//   event.preventDefault();\n\n// const {\n//   elements: { delay, step, amount },\n// } = event.currentTarget;\n\n//   let promisDelay = Number(delay.value) + Number(step.value);\n\n//   setTimeout(() => {\n// createPromise(promisNumber, delay.value)\n//   .then(value => {\n//     Notiflix.Notify.success(value);\n//   })\n//   .catch(value => {\n//     Notiflix.Notify.failure(value);\n//   })\n//   .finally(() => {\n//     return (promisNumber += 1);\n//   });\n\n// timerId = setInterval(() => {\n//   createPromise(promisNumber, promisDelay)\n//     .then(value => {\n//       Notiflix.Notify.success(value);\n//     })\n//     .catch(value => {\n//       Notiflix.Notify.failure(value);\n//     });\n//   promisNumber += 1;\n//   promisDelay += Number(step.value);\n//   if (promisNumber > Number(amount.value)) {\n//     clearInterval(timerId);\n//     promisDelay = 0;\n//     promisNumber = 1;\n//   }\n// }, step.value);\n//   }, delay.value);\n// };\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     } else {\n//       reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//     }\n//   });\n// }\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$promisNumber","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","elements","step","amount","currentTarget","promisDelay","Number","value","then","$parcel$interopDefault","Notify","success","catch","failure","setInterval","clearInterval"],"version":3,"file":"03-promises.184d53b8.js.map"}